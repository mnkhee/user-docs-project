{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"glossary/","title":"Glossary","text":"<p>Attribute: A word used inside an HTML tag in order to provide additional functions to it. </p> <pre><code>&lt;tag attribute=''&gt;&lt;/tag&gt;\n</code></pre> <p></p> <p>Data: A piece of information stored digitally on a computer. </p> <p>Developer Tools: A program that allows developers to create, test, or debug software. Many popular web browsers have developer tools built into the browser. </p> <p>Front-end Web Development: Web development focused on user experience and user interfaces. </p> <p>Function: A block of code that performs a specified task. </p> <p>HTML5 (HTML): HyperText Markup Language. HTML5 is the fifth version of HTML. </p> <p>HTML Document: A file that contains HTML code. </p> <p>JavaScript: A popular scripting language that is used to create dynamic web applications. </p> <p>Local Storage: A mechanism that allows you to store and retrieve data directly on your browser. </p> <p>Tag: A markup language keyword that is used to define the beginning and ending of an HTML element. </p> <p>Visual Studio Code (VSC): A source-code editor developed by Microsoft. </p>"},{"location":"introduction/","title":"Introduction","text":"<p>Welcome! These tutorials are designed to help you learn how to create, read, and delete data on your browser's local storage with JavaScript using the source-code editor Visual Studio Code (VSC) -- 3 of the 4 major functions for manipulating data, CRUD. By the end of these tutorials, you will gain an understanding of how data can be manipulated on your browser's local storage using JavaScript.</p> <p>CRUD stands for create, read, update, and delete.</p> <p>HTML5 (Hyper Text Markup Language) is a markup language used to create, structure, and present content to a web browser.</p> <p>JavaScript is a scripting language which allows developers to build web based applications.</p> <p>Although the tutorials can be followed using several different browsers, the images shown in our tutorials will be taken from Google Chrome.</p>"},{"location":"introduction/#target-audience","title":"Target Audience","text":"<p>These tutorials are targeted towards people who are just starting out with front-end web development -- however, people of all levels may follow alongside the tutorials.  While there are no real pre-requisites to following our tutorials, it is recommended to read about some of the HTML tags and attributes we will be using in our tutorials online.  We recommend using W3Schools to search for anything related to HTML and CSS.</p>"},{"location":"introduction/#software-requirements","title":"Software Requirements","text":"<p>The required software for these tutorials are as followed:</p> <ul> <li> Any browser that can run JavaScript (Google Chrome, Mozilla Firefox, Microsoft Edge, etc)</li> <li>Visual Studio Code, v1.70 or later</li> </ul>"},{"location":"introduction/#alertwarning-messages","title":"Alert/Warning Messages","text":"<p>Throughout the tutorials, there will be messages designed to give you relevant information.</p> <p>Alert</p> <p>This message is designed to inform you about potential errors or common mistakes.</p> <p>Important</p> <p>This message is designed to inform you about an important detail or useful suggestion.</p> <p>Info</p> <p>This message is designed to inform you about additional non-crucial information or tips.</p>"},{"location":"project-structure/","title":"Project Structure","text":""},{"location":"troubleshooting/","title":"Troubleshooting Guide","text":"<ol> <li> <p>I can't see any of the data after finishing the reading tutorial.  If you can't see the data on your console, make sure that you have properly added the data into the local storage.</p> </li> <li> <p>My browser doesn't have a developer tools function.  Install Google Chrome, Mozilla Firefox, Microsoft Edge or any other browser that supports that function.</p> </li> <li> <p>I can't seem to run Visual Studio Code.  Make sure your system is running Windows, macOS, or Linux. Other OS's are not currently supported by Visual Studio Code.</p> </li> <li> <p>I can't make a new folder.  Make sure that you have permission to create a folder in the location you are attempting to create one in.</p> On Windows 10... <p>You can check your permissions by right clicking the directory you want to create your folder in, and selecting 'Properties', and traversing to the 'Security' tab. </p> </li> <li> <p>I don't understand the terminology used in the tutorials.  There are finalized code blocks in each tutorial that you can copy directly onto your JavaScript or HTML files. If you wish to learn more about how they work, W3Schools is an excellent resource for learning HTML and JavaScript.</p> </li> </ol>"},{"location":"tutorials/creating/","title":"Creating Unique Data","text":""},{"location":"tutorials/creating/#overview","title":"Overview","text":"<p>This section will focus on creating and storing unique data -- the C of CRUD, an essential skill for front-end web development. To learn this skill, you will be applying it onto your browser's local storage.</p>"},{"location":"tutorials/creating/#setup","title":"Setup","text":"<ol> <li>Create a folder on your computer (the folder can have any name).</li> <li>Open VSC.</li> <li> <p>On the top left corner of VSC, click on File &gt; Open Folder, and select your newly created folder.      </p> </li> <li> <p>Create an HTML file by clicking on File &gt; New File..., and name it index.html.      </p> </li> <li> <p>Create a JavaScript file using File &gt; New File; name it index.js.</p> <p>Important</p> <p>You can name the JavaScript file any valid filename, however it is recommended to name it with the same name as the HTML file you plan to link it to.  For the remainder of this tutorial, we will be referring to files and variables as named in this tutorial. Copying our code blocks may result in errors if you decide to name the files/variables on your own volition.</p> </li> </ol>"},{"location":"tutorials/creating/#creating-and-storing-data","title":"Creating and Storing Data","text":"<ol> <li> <p>Open the HTML file by double clicking it on the explorer menu. If the menu is not visible, click on View &gt; Explorer.      </p> <p>Tip</p> <p>From steps 2 to 6, you may choose to follow the steps or you may copy the code block at the end of step 6.</p> </li> <li> <p>In the code editor window, type '!', and hit enter.      </p> <p>By this point, you should be seeing a template autogenerated by VSC.   If it did not autogenerate, feel free to copy and paste the following block onto your HTML file.</p> <pre><code>&lt;!DOCTYPE html&gt;\n\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>In the HTML document head, insert a blank line after line 7.</p> </li> <li>Link your JavaScript file you created during the tutorial setup.</li> <li>Create an input tag within the body of the HTML file. Give it an id attribute 'createInput'.</li> <li> <p>Create a button tag right below your input tag.</p> </li> <li> <p>Give it the id attribute 'createButton', and the onClick attribute 'submitInput()', and put any text inside it.</p> <pre><code>&lt;!DOCTYPE html&gt;\n\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n    &lt;script src=\"index.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;input id=\"createInput\"&gt;&lt;/input&gt;\n    &lt;button id=\"createButton\" onClick=\"submitInput()\"&gt;Click me!&lt;/button&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre> </li> <li> <p>In your JavaScript file, create a function with the following code block:</p> <pre><code>function submitInput() {\nvar input = document.getElementById(\"createInput\").value;\nlocalStorage.setItem(input, JSON.stringify(input));\n}\n</code></pre> </li> <li> <p>Open your HTML file by dragging it into a compatible browser.</p> </li> <li>Type something into the input box.</li> <li> <p>Hit the button to submit the unique data into the browser\u2019s local storage.</p> Checking local storage on Google Chrome <p>To check local storage data, you can right-click on a webpage and click on 'Inspect'.   This will open up a tab showing the HTML code of the webpage you are on. Click on the '&gt;&gt;' button, and select 'Application'.   Expand the 'Local Storage' tab of the 'Storage' section, and click on your local host address.   If you have data stored on your browser's local storage, then it should display on the right.</p> </li> </ol>"},{"location":"tutorials/creating/#conclusion","title":"Conclusion","text":"<p>Congratulations! If you made it to the end of this section with no issues, you have successfully created and stored data on your web browser's local storage.</p>"},{"location":"tutorials/deleting/","title":"Deleting Data","text":""},{"location":"tutorials/deleting/#overview","title":"Overview","text":"<p>This section will focus on reading data -- the D of CRUD. To learn this skill, you will be applying it onto the data that currently exists inside your browser's local storage.</p> <p>Pre-requisites</p> <p>This tutorial is a continuation on the reading tutorial. If you have not completed it, you will need to have setup data inside your browser's local storage on your own.  There is no guarantee that the data you have entered on your own will be compatible with our code. Continue at your own risk!</p>"},{"location":"tutorials/deleting/#setup","title":"Setup","text":"<ol> <li> <p>Create a button tag in a new line below the existing button tags in your HTML file.</p> </li> <li> <p>Give it an id attribute 'removeItem', an onClick event attribute 'removeItem()', and put any text inside.</p> <p>At this point, your HTML file should look like this.</p> <pre><code>&lt;!DOCTYPE html&gt;\n\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n    &lt;script src=\"index.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;input id=\"createInput\"&gt;\n    &lt;button id=\"createButton\" onClick=\"submitInput()\"&gt;Click me!&lt;/button&gt;\n    &lt;button id=\"displayData\" onClick=\"displayOutput()\"&gt;Display data&lt;/button&gt;\n&lt;button id=\"removeItem\" onClick=\"removeItem()\"&gt;Delete Data&lt;/button&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Create a function called 'removeItem()' in your JavaScript file.</p> <pre><code>function removeItem() {\n\n}\n</code></pre> </li> </ol>"},{"location":"tutorials/deleting/#delete-data-from-your-browsers-local-storage","title":"Delete Data from your Browser's Local Storage","text":"<ol> <li> <p>Inside the function removeItem(), create a variable called 'item' and use the document.getElementById() method to retrieve data and store it in the 'item' variable.</p> <pre><code>function removeItem() {\nvar item = document.getElementById('createInput');\n}\n</code></pre> </li> <li> <p>Add the functionality to remove data from your local storage by using localStorage.removeItem().</p> <pre><code>function removeItem() {\nvar item = document.getElementById('createInput');\nlocalStorage.removeItem(item);\n}\n</code></pre> </li> <li> <p>Add the functionality to reload the window by using window.location.reload().</p> <pre><code>function removeItem() {\nvar item = document.getElementById('createInput');\nlocalStorage.removeItem(item);\nwindow.location.reload();\n}\n</code></pre> </li> <li> <p>Open your HTML by dragging it onto a compatible browser.</p> </li> <li>Open developer tools, and navigate to Application.      </li> <li>Click on your local host address under 'Local Storage' tab.           At this point, you will see key value pairs. This represents the data stored on your browser's local storage.</li> <li>Enter the key of the data you want to remove into the input box.      </li> <li> <p>Press the 'Delete Data' button.</p> <p>At this point, your browser will reload and the data will be deleted from the local storage.</p> </li> </ol>"},{"location":"tutorials/deleting/#conclusion","title":"Conclusion","text":"<p>Congratulations! If you made it to the end of this section with no issues, you have successfully deleted data on your web browser's local storage.</p>"},{"location":"tutorials/reading/","title":"Reading Data","text":""},{"location":"tutorials/reading/#overview","title":"Overview","text":"<p>This section will focus on reading data -- the R of CRUD. To learn this skill, you will be applying it onto the data that currently exists inside your browser's local storage.</p> <p>Pre-requisites</p> <p>This tutorial is a continuation on the creating tutorial. If you have not completed it, you will need to have setup data inside your browser's local storage on your own.  There is no guarantee that the data you have entered on your own will be compatible with our code. Continue at your own risk!</p>"},{"location":"tutorials/reading/#setup","title":"Setup","text":"<ol> <li> <p>Create a button tag below the previous button tag in your HTML file.</p> </li> <li> <p>Give it an id attribute 'displayData', an onClick event attribute 'displayOutput', and put any text inside it.</p> <p>At this point, you should have this in your HTML file.</p> <pre><code>&lt;!DOCTYPE html&gt;\n\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n    &lt;script src=\"index.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;input id=\"createInput\"&gt;\n    &lt;button id=\"createButton\" onClick=\"submitInput()\"&gt;Click me!&lt;/button&gt;\n    &lt;button id=\"displayData\" onClick=\"displayOutput()\"&gt;Display data&lt;/button&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Define a function called 'displayOutput' in your JavaScript file.</p> <pre><code>function displayOutput() {\n\n}\n</code></pre> </li> </ol>"},{"location":"tutorials/reading/#display-all-local-storage-data-to-the-console","title":"Display All Local Storage Data to the Console","text":"<p>These set of instructions will go over how to display everything saved to your browser's local storage.</p> <ol> <li> <p>Inside the function you created in the tutorial setup, displayOutput, insert the following code block.</p> <pre><code>function displayOutput() {\nfor (var i = 0; i &lt; localStorage.length; i++) {\n\n}\n}\n</code></pre> <p>This is a loop that will let you access every variable inside your local storage.</p> </li> <li> <p>Add the following 2 lines into the for-loop.</p> <pre><code>var key = localStorage.key(i);\nvar data = localStorage.getItem(key);\n</code></pre> <p>This code, in tandem with the for-loop, lets you reference piece of data that you currently have stored in your browser's local storage.</p> </li> <li> <p>Add this line after the \"var data...\" line that will allow you to view the data later on in the browser's Developer Tools console.</p> <pre><code>console.log(data);\n</code></pre> <p>At this point, your JavaScript file contains the following:</p> <pre><code>function submitInput() {\nvar input = document.getElementById(\"createInput\").value;\nlocalStorage.setItem(input, JSON.stringify(input));\n}\n\nfunction displayOutput() {\nfor (var i = 0; i &lt; localStorage.length; i++) {\nvar key = localStorage.key(i);\nvar data = localStorage.getItem(key);\nconsole.log(data);\n}\n}\n</code></pre> </li> <li> <p>Open your HTML by dragging it onto a compatible browser.</p> </li> <li>Hit the 'Display data' button.</li> <li>Right click on the webpage. This will open up a menu.      </li> <li>Open your browser's Developer Tools by clicking 'Inspect', or your browser's equivalent.      </li> <li> <p>Navigate to the console tab.           At this point, you will see all data stored in your browser's local storage.      </p> <p>Warning</p> <p>If your local storage data was wiped, or you have not completed our creating tutorial, the data may not display. If this is the case, please enter some new data and try again.</p> </li> </ol>"},{"location":"tutorials/reading/#conclusion","title":"Conclusion","text":"<p>Congratulations! If you made it to the end of this section with no issues, you have successfully read data on your web browser's local storage and displayed it using the browser's console.</p>"}]}